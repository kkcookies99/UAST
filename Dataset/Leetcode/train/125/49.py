 class Solution:
    def XXX(self, s):
        """
        :type s: str
        :rtype: bool
        """
        s_filter = ''.join(filter(str.isalnum, s)).lower()
        return s_filter[::-1] == s_filter
    
# filter() 函数用于过滤序列，过滤掉不符合条件的元素，返回由符合条件元素组成的新列表。
# filter该接收两个参数，第一个为函数，第二个为序列，序列的每个元素作为参数传递给函数进行判，然后返回 True 或 False，最后将返回 True 的元素放到新列表中。
# isalnum判断字符变量c是否为字母或数字，若是则返回非零，否则返回零。

# print(a)
# [ 0.64061262  0.8451399   0.965673    0.89256687  0.48518743]
 
# print(a[-1]) ###取最后一个元素
# [0.48518743]
 
# print(a[:-1])  ### 除了最后一个取全部
# [ 0.64061262  0.8451399   0.965673    0.89256687]
 
# print(a[::-1]) ### 取从后向前（相反）的元素
# [ 0.48518743  0.89256687  0.965673    0.8451399   0.64061262]
 
# print(a[2::-1]) ### 取从下标为2的元素翻转读取
# [ 0.965673  0.8451399   0.64061262]


